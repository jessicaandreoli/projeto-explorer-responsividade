* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  font-size: 62.5%;
  --ff-heading:'Epilogue', sans-serif;
  --hue: 250;
  --bg-primary: hsl(var(--hue), 22%, 20%);
  --fc-primary: hsl(var(--hue), 0%, 100%);
  --fc-secundary: hsl(var(--hue), 50%, 80%);
  --fc-secundary-dark: hsl(var(--hue), 100%, 0%);
  --fs-body: 1.6rem;
  --fs-heading: clamp(4rem, 1rem + 5vw, 5.6rem);
  --fs-heading-small: clamp(3rem, 0.5rem + 3vw, 4rem);
}

body {
  font-family: var(--ff-heading);
  background: var(--bg-primary);
  font-size: var(--fs-body);
  color: var(--fc-primary);
}

.page {
  max-width: clamp(33rem, 30rem + 60vw, 117rem);
  padding: 0 5rem;
  margin: 0 auto;
}

header {
  margin: 10.6rem 0 8rem;
  text-align: center;
}

header p {
  text-transform: uppercase;
  letter-spacing: 0.3rem;
  color: var(--fc-secundary);
  line-height: 3.2rem;
  font-weight: 400;
  margin-bottom: 1.7rem;
  animation: top-p 700ms;
  animation-timing-function: ease-out;
}

header h1 {
  font-size: var(--fs-heading);
  line-height: 4.8rem;
  color: var(--fc-primary);
  font-weight: 800;
  animation: topdown-h1 700ms 1s backwards;
}

main {
  display: grid;
  gap: 3.2rem;
  padding-bottom: 10rem;
    /*name, duration, delay, fill mode (se termino
  com as configurações do início ou do fim: backwards
  ou forwards)
  o backwards aqui está fazendo a minha posição 0%
  se tornar as propriedades desse meu elemento main*/
  animation: downtop 700ms 350ms backwards;
}

.dogs {
  position: relative;
}

.dogs img {
  width: 100%;
  height: 41.6rem;
  object-fit: cover;
  border-radius: 0.6rem;
  transition: transform 200ms;
  /* aqui seria transition: transform, mas o 
  all pega todas as transformações
  colocadas no :hover*/
  filter: brightness(1) saturate(1.5)
}

.dogs img:hover {
  transform: scale(1.1);
}

.dogs h2 {
  position: absolute;
  bottom: 2.0rem;
  left: 2.8rem;
  font-weight: 800;
  color: var(--fc-primary);
  font-size: var(--fs-heading-small);
  line-height: 4.8rem;
  display: flex;
  flex-direction: column;
  gap: 2.8rem;
}

.dogs h2 span {
  border-radius: 2rem;
  background-color: var(--fc-primary);
  color: var(--fc-secundary-dark);
  font-weight: 400;
  font-size: var(--fs-body);
  padding: 0.5rem 1.6rem;
  height: 3.8rem;
  /*o fit-content é para fazer o tamanho encaixar
  no conteúdo*/
  width: fit-content;
  /*colocamos essa opção de display inline-flex
  porque o span não reconhece o height sem essa
  forma*/
  display: inline-flex;
  align-items: center;
  animation: h2span 700ms 1.5s backwards;
}

@keyframes top-p {
  0% {
    opacity: 0.2;
    transform: translateY(-30px);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes topdown-h1{
  0% {
    opacity: 0;
    transform: perspective(3);
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes downtop {
  0% {
    opacity: 0;
    transform: translateY(15px)
  }

  100% {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes h2span{
  0% {
    opacity: 1;
    transform: translateX(-30px);
  }

  100% {
    opacity: 1;
    transform: rotateX(0px);
  }
}

@media (min-width: 700px) {
  :root {
    --fs-heading: 5.6rem;
  }
  /* aqui estou separando 1 fração para cada*/
  main {
    grid-template-columns: 1fr 1fr;
  }

}

@media (min-width: 930px) {
  
  main {
    grid-template-areas: "A B B"
    "C C D";
  }

  main div:nth-child(1) {
    grid-area: A;
  }

  main div:nth-child(2) {
    grid-area: B;
  }

  main div:nth-child(3) {
    grid-area: C;
  }

  main div:nth-child(4) {
    grid-area: D;
  }
}

  